#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pygame
from gui_base import 界面基类
from gui_components import 按钮, 文本标签, 图像标签

class 时间探索界面(界面基类):
    """时间探索界面，用于玩家在时间线中前进和探索不同的时间点"""
    
    def 初始化(self):
        """初始化时间探索界面"""
        self.清除所有组件()
        
        # 获取游戏数据
        玩家数据 = self.gui.游戏引擎.获取玩家数据()
        当前年份 = 玩家数据.get("当前年份", "未知")
        当前日期 = 玩家数据.get("当前日期", "未知")
        学校年级 = 玩家数据.get("学校年级", "未知")
        
        # 创建标题
        标题 = 文本标签(
            self.gui,
            "时间探索",
            (self.gui.宽度 // 2, 40),
            字体大小=36,
            颜色=(255, 255, 255),
            居中=True
        )
        self.添加组件(标题)
        
        # 创建当前时间信息
        时间信息 = 文本标签(
            self.gui,
            f"当前时间：{当前年份}年 {当前日期}",
            (self.gui.宽度 // 2, 90),
            字体大小=24,
            颜色=(220, 220, 220),
            居中=True
        )
        self.添加组件(时间信息)
        
        年级信息 = 文本标签(
            self.gui,
            f"当前：{学校年级}",
            (self.gui.宽度 // 2, 130),
            字体大小=20,
            颜色=(200, 200, 200),
            居中=True
        )
        self.添加组件(年级信息)
        
        # 创建时间线图
        try:
            时间线图 = pygame.image.load("picture/timeline.png")
            时间线图 = pygame.transform.scale(时间线图, (700, 120))
            时间线标签 = 图像标签(
                self.gui,
                时间线图,
                (self.gui.宽度 // 2, 200),
                居中=True
            )
            self.添加组件(时间线标签)
        except:
            时间线文本 = 文本标签(
                self.gui,
                "时间线 (1995-2010)",
                (self.gui.宽度 // 2, 200),
                字体大小=18,
                颜色=(180, 180, 180),
                居中=True
            )
            self.添加组件(时间线文本)
        
        # 创建时间操作按钮
        按钮宽度 = 150
        按钮高度 = 40
        起始y位置 = 280
        按钮间距 = 20
        
        # 上一天按钮
        上一天按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 - 按钮宽度 - 按钮间距, 起始y位置),
            (按钮宽度, 按钮高度),
            "上一天",
            回调函数=self.前往上一天
        )
        self.添加组件(上一天按钮)
        
        # 下一天按钮
        下一天按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 + 按钮间距, 起始y位置),
            (按钮宽度, 按钮高度),
            "下一天",
            回调函数=self.前往下一天
        )
        self.添加组件(下一天按钮)
        
        # 上一周按钮
        上一周按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 - 按钮宽度 - 按钮间距, 起始y位置 + 按钮高度 + 按钮间距),
            (按钮宽度, 按钮高度),
            "上一周",
            回调函数=self.前往上一周
        )
        self.添加组件(上一周按钮)
        
        # 下一周按钮
        下一周按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 + 按钮间距, 起始y位置 + 按钮高度 + 按钮间距),
            (按钮宽度, 按钮高度),
            "下一周",
            回调函数=self.前往下一周
        )
        self.添加组件(下一周按钮)
        
        # 上一个月按钮
        上一月按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 - 按钮宽度 - 按钮间距, 起始y位置 + (按钮高度 + 按钮间距) * 2),
            (按钮宽度, 按钮高度),
            "上一月",
            回调函数=self.前往上一月
        )
        self.添加组件(上一月按钮)
        
        # 下一个月按钮
        下一月按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 + 按钮间距, 起始y位置 + (按钮高度 + 按钮间距) * 2),
            (按钮宽度, 按钮高度),
            "下一月",
            回调函数=self.前往下一月
        )
        self.添加组件(下一月按钮)
        
        # 上一年按钮
        上一年按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 - 按钮宽度 - 按钮间距, 起始y位置 + (按钮高度 + 按钮间距) * 3),
            (按钮宽度, 按钮高度),
            "上一年",
            回调函数=self.前往上一年
        )
        self.添加组件(上一年按钮)
        
        # 下一年按钮
        下一年按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 + 按钮间距, 起始y位置 + (按钮高度 + 按钮间距) * 3),
            (按钮宽度, 按钮高度),
            "下一年",
            回调函数=self.前往下一年
        )
        self.添加组件(下一年按钮)
        
        # 探索当前时间按钮
        探索按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 - 按钮宽度 // 2, 起始y位置 + (按钮高度 + 按钮间距) * 4),
            (按钮宽度, 按钮高度),
            "探索当前时间",
            回调函数=self.探索当前时间
        )
        self.添加组件(探索按钮)
        
        # 返回按钮
        返回按钮 = 按钮(
            self.gui,
            (self.gui.宽度 // 2 - 按钮宽度 // 2, self.gui.高度 - 70),
            (按钮宽度, 按钮高度),
            "返回",
            回调函数=self.返回主界面
        )
        self.添加组件(返回按钮)
        
        # 获取历史事件信息
        历史事件 = self.gui.游戏引擎.获取历史事件(当前年份)
        if 历史事件:
            事件标题 = 文本标签(
                self.gui,
                f"{当前年份}年重大事件",
                (self.gui.宽度 // 2, 470),
                字体大小=22,
                颜色=(255, 220, 0),
                居中=True
            )
            self.添加组件(事件标题)
            
            事件文本 = 文本标签(
                self.gui,
                历史事件,
                (self.gui.宽度 // 2, 510),
                字体大小=16,
                颜色=(220, 220, 220),
                居中=True,
                换行宽度=600
            )
            self.添加组件(事件文本)
        
    def 前往上一天(self):
        """前往上一天"""
        self.gui.游戏引擎.时间前进(-1, "天")
        self.初始化()
    
    def 前往下一天(self):
        """前往下一天"""
        self.gui.游戏引擎.时间前进(1, "天")
        self.初始化()
    
    def 前往上一周(self):
        """前往上一周"""
        self.gui.游戏引擎.时间前进(-7, "天")
        self.初始化()
    
    def 前往下一周(self):
        """前往下一周"""
        self.gui.游戏引擎.时间前进(7, "天")
        self.初始化()
    
    def 前往上一月(self):
        """前往上一月"""
        self.gui.游戏引擎.时间前进(-1, "月")
        self.初始化()
    
    def 前往下一月(self):
        """前往下一月"""
        self.gui.游戏引擎.时间前进(1, "月")
        self.初始化()
    
    def 前往上一年(self):
        """前往上一年"""
        self.gui.游戏引擎.时间前进(-1, "年")
        self.初始化()
    
    def 前往下一年(self):
        """前往下一年"""
        self.gui.游戏引擎.时间前进(1, "年")
        self.初始化()
    
    def 探索当前时间(self):
        """探索当前时间点"""
        self.gui.游戏引擎.探索当前时间()
        # 探索完毕后返回游戏主界面
        self.gui.切换界面("游戏主界面")
    
    def 返回主界面(self):
        """返回游戏主界面"""
        self.gui.切换界面("游戏主界面") 