#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pygame
from gui_base import 界面基类
from gui_components import 按钮, 文本标签

class 游戏主界面(界面基类):
    """游戏主界面，包含时间探索、收藏品、属性等功能按钮"""
    
    def 初始化(self):
        """初始化游戏主界面"""
        self.清除所有组件()
        
        # 获取当前游戏数据
        玩家数据 = self.gui.游戏引擎.获取玩家数据()
        当前年份 = 玩家数据.get("当前年份", "未知")
        当前日期 = 玩家数据.get("当前日期", "未知")
        学校年级 = 玩家数据.get("学校年级", "未知")
        
        # 创建标题
        标题 = 文本标签(
            self.gui,
            f"当前时间：{当前年份}年 {当前日期}",
            (self.gui.宽度 // 2, 50),
            字体大小=36,
            颜色=(255, 255, 255),
            居中=True
        )
        self.添加组件(标题)
        
        # 创建年级信息
        年级信息 = 文本标签(
            self.gui,
            f"当前：{学校年级}",
            (self.gui.宽度 // 2, 100),
            字体大小=24,
            颜色=(220, 220, 220),
            居中=True
        )
        self.添加组件(年级信息)
        
        # 创建功能按钮
        按钮宽度 = 180
        按钮高度 = 50
        按钮间距 = 15
        左边距 = 50
        起始y位置 = 180
        
        # 时间探索按钮
        时间探索按钮 = 按钮(
            self.gui,
            (左边距, 起始y位置),
            (按钮宽度, 按钮高度),
            "时间探索",
            回调函数=self.时间探索
        )
        self.添加组件(时间探索按钮)
        
        # 查看收藏品按钮
        收藏品按钮 = 按钮(
            self.gui,
            (左边距, 起始y位置 + (按钮高度 + 按钮间距)),
            (按钮宽度, 按钮高度),
            "查看收藏品",
            回调函数=self.查看收藏品
        )
        self.添加组件(收藏品按钮)
        
        # 查看属性按钮
        属性按钮 = 按钮(
            self.gui,
            (左边距, 起始y位置 + (按钮高度 + 按钮间距) * 2),
            (按钮宽度, 按钮高度),
            "查看属性",
            回调函数=self.查看属性
        )
        self.添加组件(属性按钮)
        
        # 查看好友按钮
        好友按钮 = 按钮(
            self.gui,
            (左边距, 起始y位置 + (按钮高度 + 按钮间距) * 3),
            (按钮宽度, 按钮高度),
            "查看好友",
            回调函数=self.查看好友
        )
        self.添加组件(好友按钮)
        
        # 返回菜单按钮
        返回按钮 = 按钮(
            self.gui,
            (左边距, 起始y位置 + (按钮高度 + 按钮间距) * 5),
            (按钮宽度, 按钮高度),
            "返回菜单",
            回调函数=self.返回主菜单
        )
        self.添加组件(返回按钮)
        
        # 保存游戏按钮
        保存按钮 = 按钮(
            self.gui,
            (左边距, 起始y位置 + (按钮高度 + 按钮间距) * 6),
            (按钮宽度, 按钮高度),
            "保存游戏",
            回调函数=self.保存游戏
        )
        self.添加组件(保存按钮)
        
        # 添加事件信息区域
        右侧区域X = 左边距 + 按钮宽度 + 50
        右侧区域宽度 = self.gui.宽度 - 右侧区域X - 50
        右侧区域高度 = 400
        
        # 事件提示文本
        事件提示 = 文本标签(
            self.gui,
            "今日事件：",
            (右侧区域X, 起始y位置),
            字体大小=24,
            颜色=(255, 255, 0),
            居中=False
        )
        self.添加组件(事件提示)
        
        # 获取当前事件
        当前事件 = self.gui.游戏引擎.获取当前事件()
        if 当前事件:
            事件文本 = 文本标签(
                self.gui,
                当前事件["描述"],
                (右侧区域X, 起始y位置 + 40),
                字体大小=18,
                颜色=(255, 255, 255),
                居中=False,
                换行宽度=右侧区域宽度
            )
            self.添加组件(事件文本)
            
            # 添加事件选项按钮
            选项起始Y = 起始y位置 + 140
            选项高度 = 40
            选项间距 = 10
            
            for i, 选项 in enumerate(当前事件.get("选项", [])):
                选项按钮 = 按钮(
                    self.gui,
                    (右侧区域X, 选项起始Y + i * (选项高度 + 选项间距)),
                    (右侧区域宽度, 选项高度),
                    选项["文本"],
                    回调函数=lambda 选项=选项: self.选择事件选项(选项["id"])
                )
                self.添加组件(选项按钮)
        else:
            无事件文本 = 文本标签(
                self.gui,
                "今天没有特殊事件，你可以自由探索。",
                (右侧区域X, 起始y位置 + 40),
                字体大小=18,
                颜色=(200, 200, 200),
                居中=False
            )
            self.添加组件(无事件文本)
    
    def 时间探索(self):
        """时间探索回调函数"""
        self.gui.切换界面("时间探索界面")
    
    def 查看收藏品(self):
        """查看收藏品回调函数"""
        self.gui.切换界面("收藏品界面")
    
    def 查看属性(self):
        """查看属性回调函数"""
        self.gui.切换界面("属性界面")
    
    def 查看好友(self):
        """查看好友回调函数"""
        self.gui.切换界面("好友界面")
    
    def 选择事件选项(self, 选项id):
        """选择事件选项回调函数"""
        self.gui.游戏引擎.处理事件选择(选项id)
        # 重新初始化界面，显示事件结果
        self.初始化()
    
    def 返回主菜单(self):
        """返回主菜单回调函数"""
        self.gui.切换界面("主菜单")
    
    def 保存游戏(self):
        """保存游戏回调函数"""
        self.gui.游戏引擎.保存游戏()
        # 显示保存成功提示
        self.gui.显示提示("游戏已保存") 