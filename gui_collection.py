#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pygame
from gui_base import 界面基类

class 收藏品界面(界面基类):
    """游戏收藏品界面"""
    
    def __init__(self, gui):
        super().__init__(gui)
        self.当前类别 = "玩具"  # 默认显示玩具类别
        self.类别列表 = ["玩具", "卡片", "零食", "科技"]
        self.每页显示数量 = 8
        self.当前页码 = 0
        self.收藏品数据 = None
    
    def 初始化(self):
        """初始化收藏品界面"""
        屏幕宽度 = self.gui.屏幕.get_width()
        屏幕高度 = self.gui.屏幕.get_height()
        
        # 创建返回按钮
        返回按钮 = self.gui.创建按钮(20, 20, 100, 40, "返回", self.返回主菜单)
        self.添加组件(返回按钮)
        
        # 创建类别按钮
        按钮宽度 = (屏幕宽度 - 100) // len(self.类别列表)
        for i, 类别 in enumerate(self.类别列表):
            按钮 = self.gui.创建按钮(50 + i * 按钮宽度, 80, 按钮宽度 - 10, 40, 类别, lambda c=类别: self.切换类别(c))
            self.添加组件(按钮)
        
        # 创建翻页按钮
        上一页按钮 = self.gui.创建按钮(50, 屏幕高度 - 60, 100, 40, "上一页", self.上一页)
        下一页按钮 = self.gui.创建按钮(屏幕宽度 - 150, 屏幕高度 - 60, 100, 40, "下一页", self.下一页)
        self.添加组件(上一页按钮)
        self.添加组件(下一页按钮)
        
        # 获取收藏品数据
        self.更新收藏品数据()
    
    def 更新收藏品数据(self):
        """从游戏引擎获取收藏品数据"""
        if self.gui.游戏引擎:
            self.收藏品数据 = self.gui.游戏引擎.获取收藏品数据()
        else:
            # 测试数据
            self.收藏品数据 = {
                "玩具": ["变形金刚", "四驱车", "魔方", "悠悠球", "小霸王游戏机"],
                "卡片": ["水浒卡", "三国卡", "龙珠卡", "圣斗士卡"],
                "零食": ["大大泡泡糖", "旺旺雪饼", "五角星冰棍", "太空人糖"],
                "科技": ["BP机", "随身听", "小灵通", "初代MP3"]
            }
    
    def 返回主菜单(self):
        """返回主菜单"""
        self.gui.切换界面("主菜单")
    
    def 切换类别(self, 类别):
        """切换收藏品类别
        
        参数:
            类别: 收藏品类别名称
        """
        self.当前类别 = 类别
        self.当前页码 = 0  # 重置页码
    
    def 上一页(self):
        """显示上一页收藏品"""
        if self.当前页码 > 0:
            self.当前页码 -= 1
    
    def 下一页(self):
        """显示下一页收藏品"""
        当前类别收藏品 = self.收藏品数据.get(self.当前类别, [])
        最大页数 = (len(当前类别收藏品) - 1) // self.每页显示数量
        if self.当前页码 < 最大页数:
            self.当前页码 += 1
    
    def 绘制(self, 屏幕):
        """绘制收藏品界面
        
        参数:
            屏幕: Pygame屏幕对象
        """
        if not self.活跃:
            return
        
        屏幕宽度 = 屏幕.get_width()
        屏幕高度 = 屏幕.get_height()
        
        # 绘制标题
        标题字体 = pygame.font.Font(None, 48)
        标题文本 = 标题字体.render(f"收藏品 - {self.当前类别}", True, (255, 255, 255))
        标题位置 = ((屏幕宽度 - 标题文本.get_width()) // 2, 20)
        屏幕.blit(标题文本, 标题位置)
        
        # 获取当前类别的收藏品
        当前类别收藏品 = self.收藏品数据.get(self.当前类别, [])
        
        # 计算当前页的收藏品
        开始索引 = self.当前页码 * self.每页显示数量
        结束索引 = min(开始索引 + self.每页显示数量, len(当前类别收藏品))
        当前页收藏品 = 当前类别收藏品[开始索引:结束索引]
        
        # 绘制收藏品
        收藏品字体 = pygame.font.Font(None, 32)
        收藏品区域起始y = 140
        收藏品项目高度 = 50
        
        for i, 收藏品名称 in enumerate(当前页收藏品):
            # 绘制收藏品背景
            pygame.draw.rect(屏幕, (50, 50, 70), (50, 收藏品区域起始y + i * 收藏品项目高度, 屏幕宽度 - 100, 收藏品项目高度 - 5), 0, 5)
            
            # 绘制收藏品名称
            收藏品文本 = 收藏品字体.render(收藏品名称, True, (255, 255, 255))
            屏幕.blit(收藏品文本, (70, 收藏品区域起始y + i * 收藏品项目高度 + 15))
        
        # 显示页码信息
        总页数 = max(1, (len(当前类别收藏品) - 1) // self.每页显示数量 + 1)
        页码字体 = pygame.font.Font(None, 24)
        页码文本 = 页码字体.render(f"第 {self.当前页码 + 1}/{总页数} 页", True, (200, 200, 200))
        屏幕.blit(页码文本, ((屏幕宽度 - 页码文本.get_width()) // 2, 屏幕高度 - 30))
        
        # 如果没有收藏品，显示提示信息
        if not 当前页收藏品:
            提示字体 = pygame.font.Font(None, 36)
            提示文本 = 提示字体.render("你还没有收集到任何此类别的收藏品。探索世界，收集童年珍贵物品吧！", True, (200, 200, 200))
            提示位置 = ((屏幕宽度 - 提示文本.get_width()) // 2, 屏幕高度 // 2)
            屏幕.blit(提示文本, 提示位置)
        
        # 绘制所有组件
        super().绘制(屏幕) 